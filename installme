#!/usr/bin/env bash
#Copyright (C) 2015  Helal Uddin <helal00 at gmail.com>
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.

_srcsbinpath=$(dirname $(readlink -f $0))

declare -a _requiredfiles
declare -a _requiredexefiles

_requiredfiles[${#_requiredfiles[@]}]="functions"
_requiredexefiles[${#_requiredexefiles[@]}]="getgitrepo"
_requiredexefiles[${#_requiredexefiles[@]}]="githublatest"

if [ ! -z "$_srcsbinpath" ] ; then
	if [ -s "$_srcsbinpath/resolve" ] ; then
		. $_srcsbinpath/resolve	
	else
		echo "$_srcsbinpath/resolve file not found!" 1>&2
		exit 1
	fi
fi

_installerdir="$PWD/installer_dir"
_curdir=$PWD
_osname=$(getosname)
_debianbased=1
_toinstall=""

if ! isinstalled "ufw" &>>/dev/null ; then
	_toinstall=" ufw"
fi
if ! isinstalled "python" &>>/dev/null ; then
	_toinstall="${_toinstall} python"
fi
if ! isinstalled "curl" &>>/dev/null ; then
	_toinstall="${_toinstall} curl"
fi
if ! isinstalled "jq" &>>/dev/null; then
	_toinstall="${_toinstall} jq"
fi
if ! isinstalled "bc" &>>/dev/null ; then
	_toinstall="${_toinstall} bc"
fi
_toinstall=$(trimStr "$_toinstall")
_aptgetloc=$(isinstalled "apt-get")
if [ ! -z "$_aptgetloc" ] ; then
	_debianbased=0
fi
if [ ! -z "$_toinstall" ] ; then
	if [ "$_debianbased" -ne 0 ] ; then
		echo "	ERROR: We cannot find 'apt-get' in your operating system for automated installation, '$_toinstall' packages need to be installed by yourself. Fully supported version is Debian 7 (wheezy) or Ubuntu 14.04 (truesty) or up. Please install '$_toinstall' packages for your distro to use this utility. e.g. for debian/ubuntu, sudo apt-get -y install $_toinstall" 1>&2
		exit 1
	else
		sudo apt-get -y install "$_toinstall"
		if [ $? -ne 0 ] ; then
			echo "	ERROR: '$_toinstall' packages can't be installed properly, there is some error. Please install them yourselft to continue." 1>&2
			exit 1
		fi
	fi
fi

if sudo ufw status | grep -q inactive ; then
	sudo ufw limit ssh
	ufw enable
	echo "	INFORMATION: Only the ssh port (see /etc/services for port definations) is open. You should open other ports using 'sudo ufw' command for the applications you are using. e.g. 'sudo ufw allow http/tcp' or 'sudo ufw allow https/tcp'" 1>&2
fi
echo "ufw $(ufw status)"

if ! python -m pyinotify -h &>>/dev/null ; then
	echo "into pynotify"
	exit 0
	mkdir -p $_installerdir
	cd $_installerdir
	$_getgitrepo last https://github.com/seb-m/pyinotify
	cd pyinotify-*
	python setup.py install
	python -m pyinotify -h
	cd $_curdir
fi

_storeexist=1
if [ -d "$_srcsbinpath/.store" ] ; then
	_storeexist=0
else
	sudo mkdir -p "$_srcsbinpath/.store"
fi

_f2blocation=$(command -v fail2ban-client)

if [ ! -z "$_f2blocation" ] ; then
	if [ $_debianbased -eq 0 ]; then
		if [ ! -x "/etc/init.d/fail2ban" ] || [ ! -s "/etc/init/fail2ban.conf" ] ; then
			_f2blocation=""
		else
			service fail2ban start
		fi
	else
		fail2ban-client start
	fi
	if [ ! -z "$_f2blocation" ] ; then
		if ! fail2ban-client status &>>/dev/null ; then
			_f2blocation=""
		fi
	fi	
fi

if [ ! -z "$_f2blocation" ] ; then
	_insatlledver=$("$_f2blocation" version)
	_latestversion=$($_githublatest https://github.com/fail2ban/fail2ban)
	if [ "$_insatlledver" != "$_latestversion" ] ; then
		echo "	INFORMATION: Newer version of fail2ban avaibale. You have version: $_insatlledver and version  available: $_latestversion. Check https://github.com/fail2ban/fail2ban for more detials, if you wish to upgrade fail2ban."
	fi
else
	_installanyway=1
	if [ "$_debianbased" -eq 1 ] ; then
		echo "	IMPORTANT: we can't find Fail2ban installed in your system." 1>&2
		if confirmtogo "Do you want to install Fail2ban yourself or want us to fetch latest version from github and do the basic setup? In later case, you might need to copy some init scripts to your distro's init directories to start fail2ban automatically on reboot. If you know how to do that, you should let us fetch the latest version from github. Please type 'yes ' to fetch fail2ban latest or press only enter to quit this script.(yes/enter to quit): " ; then
			_installanyway=0
		else
			if [ "$_storeexist" -eq 1 ] ; then
				sudo rm -rf "$_srcsbinpath/.store"
			fi
			exit 1
		fi
	fi

	if [ "$_debianbased" -eq 0 ] || [ "$_installanyway" -eq 0 ] ; then
		cd $_installerdir
		$_getgitrepo last https://github.com/fail2ban/fail2ban
		cd fail2ban-*
		python setup.py install
		_f2blocation=$(command -v fail2ban-client)
		if [ -z "$_f2blocation" ] ; then 
			echo "	ERROR: fail2ban can't be installed properly, there is some error. Please install them yourselft to continue." 1>&2
			if [ "$_storeexist" -eq 1 ] ; then
				sudo rm -rf "$_srcsbinpath/.store"
			fi
			exit 1
		fi
		if [ -d /etc/logrotate.d/ ] ; then
		cat > /etc/logrotate.d/fail2ban <<-EOL
		/var/log/fail2ban.log {
		   
			weekly
			rotate 4
			compress

			delaycompress
			missingokA
			postrotate
			$_f2blocation flushlogs  1>/dev/null || true
			endscript

			# If fail2ban runs as non-root it still needs to have write access
			# to logfiles.
			# create 640 fail2ban adm
			create 640 root adm
		}
		EOL
		fi
		if [ $_debianbased -eq 0 ]; then
			cp files/debian-initd /etc/init.d/fail2ban
			chmod +x /etc/init.d/fail2ban
			cp files/fail2ban.upstart /etc/init/fail2ban.conf
			_f2blocationre=${_f2blocation////\\/}
			sed -i "s/\/usr\/bin\/fail2ban-client/$_f2blocationre/g" /etc/init/fail2ban.conf
			service fail2ban start
		else
			fail2ban-client start
			echo "	IMPORTANT: Please copy and rename init/service files from $(eval echo "${_installerdir}/fail2ban-*")/files/ to the appropriate directory for your distro" 1>&2
		fi
		if [ $_debianbased -eq 0 ]; then
			service fail2ban start
		else
			fail2ban-client start
		fi
		if ! fail2ban-client status &>>/dev/null ; then
			echo "	ERROR: fail2ban can't be installed properly, there is some error. Please install them yourselft to continue." 1>&2
			if [ "$_storeexist" -eq 1 ] ; then
				sudo rm -rf "$_srcsbinpath/.store"
			fi
			exit 1
		fi
		cd $_curdir
	fi
fi

replaceline "helperbase = " "helperbase = $_srcsbinpath/" "$_srcsbinpath/actions/ufw-custom.conf"
replaceline "dbfile = " "dbfile = $_srcsbinpath/.store/balcklist.db" "$_srcsbinpath/actions/badips_custom.conf"
replaceline "dbfile = " "dbfile = $_srcsbinpath/.store/balcklist.db" "$_srcsbinpath/actions/blocklist_de_custom.conf"
replaceline "dbfile = " "dbfile = $_srcsbinpath/.store/balcklist.db" "$_srcsbinpath/actions/xarf-login-attack_custom.conf"


_nginxlocation=$(command -v nginx)
_justinsnginx=1
if [ -z "$_nginxlocation" ] ; then
	if confirmtogo "We can't find Nginx installed into your system.Do you still want to install Nginx specific jails? (yes/only enter to cancel) : " ; then
		_justinsnginx=0
	fi
fi

if [ ! -z "$_nginxlocation" ] || [ "$_justinsnginx" -eq 0 ] ; then
	ln -fs $_srcsbinpath/actions/* /etc/fail2ban/action.d/
	ln -fs $_srcsbinpath/filters/* /etc/fail2ban/filter.d/
	ln -fs $_srcsbinpath/jails/* /etc/fail2ban/jail.d/
else
	ln -fs $(eval echo "$_srcsbinpath/actions/!(nginx-*)") /etc/fail2ban/action.d/
	ln -fs $(eval echo "$_srcsbinpath/filters/!(nginx-*)") /etc/fail2ban/filter.d/
	ln -fs $(eval echo "$_srcsbinpath/jails/!(nginx-*)") /etc/fail2ban/jail.d/
fi

fail2ban-client reload
